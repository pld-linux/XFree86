diff -urN XFree86-4.3.0/xc/programs/Xserver/hw/xfree86/drivers/savage.org/savage_accel.c XFree86-4.3.0/xc/programs/Xserver/hw/xfree86/drivers/savage/savage_accel.c
--- XFree86-4.3.0/xc/programs/Xserver/hw/xfree86/drivers/savage.org/savage_accel.c	Fri Nov  8 19:03:32 2002
+++ XFree86-4.3.0/xc/programs/Xserver/hw/xfree86/drivers/savage/savage_accel.c	Mon May  5 12:30:22 2003
@@ -470,6 +470,7 @@
 	    | NO_TRANSPARENCY
 	    | HARDWARE_PATTERN_PROGRAMMED_BITS
 	    | HARDWARE_PATTERN_PROGRAMMED_ORIGIN
+	    | ROP_NEEDS_SOURCE
 	    ;
     }
 #endif
@@ -496,6 +497,7 @@
 	| SCANLINE_PAD_DWORD
 	| BIT_ORDER_IN_BYTE_MSBFIRST
 	| LEFT_EDGE_CLIPPING
+	| ROP_NEEDS_SOURCE
 	;
     xaaptr->SetupForImageWrite = SavageSetupForImageWrite;
     xaaptr->SubsequentImageWriteRect = SavageSubsequentImageWriteRect;
@@ -506,7 +508,7 @@
     /* WriteBitmap color expand */
 
 #if 0
-    xaaptr->WriteBitmapFlags = NO_PLANEMASK;
+    xaaptr->WriteBitmapFlags = NO_PLANEMASK | ROP_NEEDS_SOURCE;
     xaaptr->WriteBitmap = SavageWriteBitmapCPUToScreenColorExpand;
 #endif
 
diff -urN XFree86-4.3.0/xc/programs/Xserver/hw/xfree86/drivers/savage.org/savage_driver.c XFree86-4.3.0/xc/programs/Xserver/hw/xfree86/drivers/savage/savage_driver.c
--- XFree86-4.3.0/xc/programs/Xserver/hw/xfree86/drivers/savage.org/savage_driver.c	Tue Feb 25 05:08:21 2003
+++ XFree86-4.3.0/xc/programs/Xserver/hw/xfree86/drivers/savage/savage_driver.c	Mon May  5 12:30:23 2003
@@ -19,16 +19,12 @@
 #define DPMS_SERVER
 #include "extensions/dpms.h"
 
-#ifdef XvExtension
 #include "xf86xv.h"
-#endif
 
 #include "savage_driver.h"
 #include "savage_bci.h"
 
 
-
-
 /*
  * prototypes
  */
@@ -82,10 +78,10 @@
 #define iabs(a)	((int)(a)>0?(a):(-(a)))
 
 #define DRIVER_NAME	"savage"
-#define DRIVER_VERSION	"1.1.26"
+#define DRIVER_VERSION	"1.1.27"
 #define VERSION_MAJOR	1
 #define VERSION_MINOR	1
-#define PATCHLEVEL	26
+#define PATCHLEVEL	27
 #define SAVAGE_VERSION	((VERSION_MAJOR << 24) | \
 			 (VERSION_MINOR << 16) | \
 			 PATCHLEVEL)
@@ -287,7 +283,6 @@
     "XAACopyROP_PM",
     "XAACreateInfoRec",
     "XAADestroyInfoRec",
-    "XAAFillSolidRects",
     "XAAHelpPatternROP",
     "XAAHelpSolidROP",
     "XAAInit",
@@ -2363,10 +2358,8 @@
     if (xf86DPMSInit(pScreen, SavageDPMS, 0) == FALSE)
 	xf86DrvMsg(pScrn->scrnIndex, X_ERROR, "DPMS initialization failed\n");
 
-#ifdef XvExtension
     if( !psav->NoAccel && !SavagePanningCheck(pScrn) )
 	SavageInitVideo( pScreen );
-#endif
 
     if (serverGeneration == 1)
 	xf86ShowUnusedOptions(pScrn->scrnIndex, pScrn->options);
diff -urN XFree86-4.3.0/xc/programs/Xserver/hw/xfree86/drivers/savage.org/savage_driver.h XFree86-4.3.0/xc/programs/Xserver/hw/xfree86/drivers/savage/savage_driver.h
--- XFree86-4.3.0/xc/programs/Xserver/hw/xfree86/drivers/savage.org/savage_driver.h	Sat Jan 18 16:22:30 2003
+++ XFree86-4.3.0/xc/programs/Xserver/hw/xfree86/drivers/savage/savage_driver.h	Mon May  5 12:30:23 2003
@@ -140,11 +140,9 @@
     int			YFactor;	/* overlay Y factor */
     int			displayXoffset;	/* overlay X offset */
     int			displayYoffset;	/* overlay Y offset */
-    int			XExpansion;	/* expansion factor in x */
-    int			XExp1;
+    int			XExp1;		/* expansion ratio in x */
     int			XExp2;
-    int			YExpansion;	/* expansion factor in x */
-    int			YExp1;
+    int			YExp1;		/* expansion ratio in x */
     int			YExp2;
     int			cxScreen;
     int			TVSizeX;
diff -urN XFree86-4.3.0/xc/programs/Xserver/hw/xfree86/drivers/savage.org/savage_regs.h XFree86-4.3.0/xc/programs/Xserver/hw/xfree86/drivers/savage/savage_regs.h
--- XFree86-4.3.0/xc/programs/Xserver/hw/xfree86/drivers/savage.org/savage_regs.h	Wed Oct  2 22:39:55 2002
+++ XFree86-4.3.0/xc/programs/Xserver/hw/xfree86/drivers/savage/savage_regs.h	Mon May  5 12:30:23 2003
@@ -216,7 +216,15 @@
     VGAOUT8(psav->vgaIOBase + 5, a);		\
 }
  
+#define HZEXP_COMP_1		0x54
+#define HZEXP_BORDER		0x58
 #define HZEXP_FACTOR_IGA1	0x59
+
+#define VTEXP_COMP_1		0x56
+#define VTEXP_BORDER		0x5a
 #define VTEXP_FACTOR_IGA1	0x5b
 
+#define EC1_CENTER_ON	0x10
+#define EC1_EXPAND_ON	0x0c
+
 #endif /* _SAVAGE_REGS_H */
diff -urN XFree86-4.3.0/xc/programs/Xserver/hw/xfree86/drivers/savage.org/savage_vbe.c XFree86-4.3.0/xc/programs/Xserver/hw/xfree86/drivers/savage/savage_vbe.c
--- XFree86-4.3.0/xc/programs/Xserver/hw/xfree86/drivers/savage.org/savage_vbe.c	Wed Oct  2 22:39:55 2002
+++ XFree86-4.3.0/xc/programs/Xserver/hw/xfree86/drivers/savage/savage_vbe.c	Mon May  5 12:30:23 2003
@@ -72,7 +72,7 @@
     SavageClearVM86Regs( psav->pInt10 );
     psav->pInt10->ax = 0x4f14;	/* S3 extensions */
     psav->pInt10->bx = 0x0001;	/* Set default refresh rate */
-    psav->pInt10->cx = n;
+    psav->pInt10->cx = n & 0x3fff;
     psav->pInt10->di = Refresh & 0xffff;
 
     xf86ExecX86int10( psav->pInt10 );
diff -urN XFree86-4.3.0/xc/programs/Xserver/hw/xfree86/drivers/savage.org/savage_video.c XFree86-4.3.0/xc/programs/Xserver/hw/xfree86/drivers/savage/savage_video.c
--- XFree86-4.3.0/xc/programs/Xserver/hw/xfree86/drivers/savage.org/savage_video.c	Sun Jan 12 04:55:49 2003
+++ XFree86-4.3.0/xc/programs/Xserver/hw/xfree86/drivers/savage/savage_video.c	Mon May  5 12:30:24 2003
@@ -17,11 +17,6 @@
 
 #define TIMER_MASK      (OFF_TIMER | FREE_TIMER)
 
-#ifndef XvExtension
-void SavageInitVideo(ScreenPtr pScreen) {}
-void SavageResetVideo(ScrnInfoPtr pScrn) {}
-#else
-
 void myOUTREG( SavagePtr psav, unsigned long offset, unsigned long value );
 
 static XF86VideoAdaptorPtr SavageSetupImageVideo(ScreenPtr);
@@ -79,7 +74,7 @@
 ) = NULL;
 
 static void OverlayParamInit(ScrnInfoPtr pScrn);
-static void InitStreamsForExpansion(SavagePtr psav);
+static void InitStreamsForExpansion(ScrnInfoPtr pScrn);
 
 /*static void SavageBlockHandler(int, pointer, pointer, pointer);*/
 
@@ -421,7 +416,6 @@
 
     /* Sequence stolen from streams.c in M7 NT driver */
 
-
     xf86EnableIO();
 
     /* Unlock extended registers. */
@@ -430,10 +424,20 @@
     VGAOUT16(vgaCRIndex, 0xa039);
     VGAOUT16(0x3c4, 0x0608);
 
+    if( 
+	S3_SAVAGE_MOBILE_SERIES(psav->Chipset) && 
+	!psav->CrtOnly && 
+	!psav->TvOn 
+    ) {
+	OverlayParamInit( pScrn );
+    }
+
     VGAOUT8( vgaCRIndex, EXT_MISC_CTRL2 );
 
     if( S3_SAVAGE_MOBILE_SERIES(psav->Chipset) ||
-        (psav->Chipset == S3_SUPERSAVAGE) ||
+#if 0 /* I don't think commenting this out is correct (EE) */
+	(psav->Chipset == S3_SUPERSAVAGE) ||
+#endif
         (psav->Chipset == S3_SAVAGE2000) )
     {
 	jStreamsControl = VGAIN8( vgaCRReg ) | ENABLE_STREAM1;
@@ -878,36 +882,6 @@
 }
 
 
-static Bool
-RegionsEqual(RegionPtr A, RegionPtr B)
-{
-    int *dataA, *dataB;
-    int num;
-
-    num = REGION_NUM_RECTS(A);
-    if(num != REGION_NUM_RECTS(B))
-	return FALSE;
-
-    if((A->extents.x1 != B->extents.x1) ||
-       (A->extents.x2 != B->extents.x2) ||
-       (A->extents.y1 != B->extents.y1) ||
-       (A->extents.y2 != B->extents.y2))
-	return FALSE;
-
-    dataA = (int*)REGION_RECTS(A);
-    dataB = (int*)REGION_RECTS(B);
-
-    while(num--) {
-	if((dataA[0] != dataB[0]) || (dataA[1] != dataB[1]))
-	   return FALSE;
-	dataA += 2; 
-	dataB += 2;
-    }
-
-    return TRUE;
-}
-
-
 /* SavageClipVideo -  
 
    Takes the dst box in standard X BoxRec form (top and left
@@ -992,9 +966,8 @@
 
     REGION_EMPTY(pScrn->pScreen, &pPriv->clip);   
 
-    SavageStreamsOff( pScrn );
-
     if(shutdown) {
+	SavageStreamsOff( pScrn );
 	if(pPriv->area) {
 	    xf86FreeOffscreenArea(pPriv->area);
 	    pPriv->area = NULL;
@@ -1283,9 +1256,11 @@
     ssControl |= (1 << 24);
     OUTREG(SSTREAM_CONTROL_REG, ssControl);
 
+#if 0
     /* Set color key on primary. */
 
     SavageSetColorKey( pScrn );
+#endif
 
     /* Set FIFO L2 on second stream. */
 
@@ -1358,10 +1333,10 @@
 	    !psav->CrtOnly &&
 	    !psav->TvOn
 	) {
-	    drw_w = (float)(drw_w * psav->XExp1)/(float)psav->XExp2 + 1;
-	    drw_h = (float)(drw_h * psav->YExp1)/(float)psav->YExp2 + 1;
-	    dstBox->x1 = (float)(dstBox->x1 * psav->XExp1)/(float)psav->XExp2;
-	    dstBox->y1 = (float)(dstBox->y1 * psav->YExp1)/(float)psav->YExp2;
+	    drw_w = (drw_w * psav->XExp1)/psav->XExp2 + 1;
+	    drw_h = (drw_h * psav->YExp1)/psav->YExp2 + 1;
+	    dstBox->x1 = (dstBox->x1 * psav->XExp1)/psav->XExp2;
+	    dstBox->y1 = (dstBox->y1 * psav->YExp1)/psav->YExp2;
 	    dstBox->x1 += psav->displayXoffset;
 	    dstBox->y1 += psav->displayYoffset;
 	}
@@ -1378,14 +1353,16 @@
      * are 2 bytes/pixel.
      */
 
-    OUTREG(SEC_STREAM_FBUF_ADDR0, (offset + (x1>>15)) & 0x3ffff0 );
+    OUTREG(SEC_STREAM_FBUF_ADDR0, (offset + (x1>>15)) & 0x7ffff0 );
     OUTREG(SEC_STREAM_STRIDE, pitch & 0xfff );
     OUTREG(SEC_STREAM_WINDOW_START, ((dstBox->x1+1) << 16) | (dstBox->y1+1) );
     OUTREG(SEC_STREAM_WINDOW_SZ, ((drw_w) << 16) | drw_h );
 
+#if 0
     /* Set color key on primary. */
 
     SavageSetColorKey( pScrn );
+#endif
 
     /* Set FIFO L2 on second stream. */
 
@@ -1424,6 +1401,20 @@
     int top, left, npixels, nlines;
     BoxRec dstBox;
     CARD32 tmp;
+/*    xf86ErrorFVerb(XVTRACE,"SavagePutImage\n"); */
+
+    if( psav->cxScreen != pScrn->currentMode->HDisplay )
+    {
+	/* The mode has changed.  Recompute the offsets. */
+
+	if( 
+	    S3_SAVAGE_MOBILE_SERIES(psav->Chipset) && 
+	    !psav->CrtOnly && 
+	    !psav->TvOn 
+	) {
+	    OverlayParamInit( pScrn );
+	}
+    }
 
     if(drw_w > 16384) drw_w = 16384;
 
@@ -1519,18 +1510,19 @@
 	SavageCopyData(buf, dst_start, srcPitch, dstPitch, nlines, npixels);
 	break;
     }  
+   
+    /* We need to enable the video before we draw the chroma color.
+       Otherwise, we get blue flashes. */
+
+    SavageDisplayVideo(pScrn, id, offset, width, height, dstPitch,
+	     x1, y1, x2, y2, &dstBox, src_w, src_h, drw_w, drw_h);
 
     /* update cliplist */
-    if(!RegionsEqual(&pPriv->clip, clipBoxes)) {
-	REGION_COPY(pScreen, &pPriv->clip, clipBoxes);
+    if(!REGION_EQUAL(pScrn->pScreen, &pPriv->clip, clipBoxes)) {
+	REGION_COPY(pScrn->pScreen, &pPriv->clip, clipBoxes);
 	/* draw these */
-	XAAFillSolidRects(pScrn, pPriv->colorKey, GXcopy, ~0, 
-					REGION_NUM_RECTS(clipBoxes),
-					REGION_RECTS(clipBoxes));
+	xf86XVFillKeyHelper(pScrn->pScreen, pPriv->colorKey, clipBoxes);
     }
-   
-    SavageDisplayVideo(pScrn, id, offset, width, height, dstPitch,
-	     x1, y1, x2, y2, &dstBox, src_w, src_h, drw_w, drw_h);
 
     pPriv->videoStatus = CLIENT_VIDEO_ON;
 
@@ -1692,6 +1684,7 @@
     XF86SurfacePtr surface
 ){
     OffscreenPrivPtr pPriv = (OffscreenPrivPtr)surface->devPrivate.ptr;
+    xf86ErrorFVerb(XVTRACE,"SavageStopSurface\n");
 
     if(pPriv->isOn) {
 	/*SavagePtr psav = SAVPTR(surface->pScrn);*/
@@ -1754,6 +1747,7 @@
     SavagePortPrivPtr portPriv = GET_PORT_PRIVATE(pScrn);
     INT32 x1, y1, x2, y2;
     BoxRec dstBox;
+    xf86ErrorFVerb(XVTRACE,"SavageDisplaySurface\n");
 
     x1 = src_x;
     x2 = src_x + src_w;
@@ -1777,14 +1771,12 @@
     dstBox.y1 -= pScrn->frameY0;
     dstBox.y2 -= pScrn->frameY0;
 
-    XAAFillSolidRects(pScrn, portPriv->colorKey, GXcopy, ~0, 
-                                        REGION_NUM_RECTS(clipBoxes),
-                                        REGION_RECTS(clipBoxes));
-
     SavageDisplayVideo(pScrn, surface->id, surface->offsets[0], 
 	     surface->width, surface->height, surface->pitches[0],
 	     x1, y1, x2, y2, &dstBox, src_w, src_h, drw_w, drw_h);
 
+    xf86XVFillKeyHelper(pScrn->pScreen, portPriv->colorKey, clipBoxes);
+
     pPriv->isOn = TRUE;
 #if 0
     if(portPriv->videoStatus & CLIENT_VIDEO_ON) {
@@ -1839,144 +1831,87 @@
     SavagePtr psav = SAVPTR(pScrn);
 
     psav = SAVPTR(pScrn);
-    psav->cxScreen = psav->iResX;
-    InitStreamsForExpansion(psav);
+    psav->cxScreen = pScrn->currentMode->HDisplay;
+    InitStreamsForExpansion(pScrn);
 }
 
-/* Function to calculate lcd expansion x,yfactor and offset for overlay
+/* Function to calculate lcd expansion x,y factor and offset for overlay
  */
-static void InitStreamsForExpansion(SavagePtr psav)
+static void InitStreamsForExpansion(ScrnInfoPtr pScrn)
 {
+    SavagePtr psav = SAVPTR(pScrn);
     int		PanelSizeX,PanelSizeY;
     int		ViewPortWidth,ViewPortHeight;
+    int		XExpansion, YExpansion;
     int		XFactor, YFactor;
+    int		Hstate, Vstate;
+
+    static CARD32 Xfactors[] = {
+	0x00010001,
+	0x00010001, /* 1 */
+	0,
+	0x00090008, /* 3 */
+	0x00050004, /* 4 */
+	0,
+	0x00030002, /* 6 */
+	0x00020001  /* 7 */
+    };
+
+    static CARD32 Yfactors[] = {
+	0x00010001,	0x00010001,
+	0,		0x00060005,
+	0x00050004,	0x00040003,
+	0,		0x00030002,
+	0x00020001,	0x00050002,
+	0x000C0005,	0x00080003,
+	0x00090004,	0,
+	0x00030001,	0x00040001,
+    };
+
+
 
     PanelSizeX = psav->PanelX;
     PanelSizeY = psav->PanelY;
-    ViewPortWidth = psav->iResX;
-    ViewPortHeight = psav->iResY;
+    ViewPortWidth = pScrn->currentMode->HDisplay;
+    ViewPortHeight = pScrn->currentMode->VDisplay;
+
     if( PanelSizeX == 1408 )
 	PanelSizeX = 1400;
-    psav->XExpansion = 0x00010001;
-    psav->YExpansion = 0x00010001;
+
+    XExpansion = 0x00010001;
+    YExpansion = 0x00010001;
+
     psav->displayXoffset = 0;
     psav->displayYoffset = 0;
 
+    VGAOUT8(0x3C4, HZEXP_COMP_1);
+    Hstate = VGAIN8(0x3C5);
+    VGAOUT8(0x3C4, VTEXP_COMP_1);
+    Vstate = VGAIN8(0x3C5);
     VGAOUT8(0x3C4, HZEXP_FACTOR_IGA1);
-    XFactor = VGAIN8(0x3C5) >> 4;
+    XFactor = VGAIN8(0x3C5);
     VGAOUT8(0x3C4, VTEXP_FACTOR_IGA1);
-    YFactor = VGAIN8(0x3C5) >> 4;
+    YFactor = VGAIN8(0x3C5);
 
-    switch( XFactor )
+    if( Hstate & EC1_EXPAND_ON )
     {
-	case 1:
-	    psav->XExpansion = 0x00010001;
-	    psav->displayXoffset = 
-		(((PanelSizeX - ViewPortWidth) / 2) + 0x7) & 0xFFF8;
-	    break;
-
-	case 3:
-	    psav->XExpansion = 0x00090008;
-	    psav->displayXoffset = 
-		(((PanelSizeX - ((9 * ViewPortWidth)/8)) / 2) + 0x7) & 0xFFF8;
-	    break;
+	XExpansion = Xfactors[XFactor>>4];
+    }
 
-	case 4:
-	    psav->XExpansion = 0x00050004;
+    if( Vstate & EC1_EXPAND_ON )
+    {
+	YExpansion = Yfactors[YFactor>>4];
+    }
 
-	    if ((psav->cxScreen == 800) && (PanelSizeX !=1400))
-	    {
-		psav->displayXoffset = 
-		    (((PanelSizeX - ((5 * ViewPortWidth)/4)) / 2) ) & 0xFFF8; 
-	    }
-	    else
-	    {
-		psav->displayXoffset = 
-		    (((PanelSizeX - ((5 * ViewPortWidth)/4)) / 2) +0x7) & 0xFFF8;
-	    }
-	    break;
+    psav->XExp1 = XExpansion >> 16;
+    psav->XExp2 = XExpansion & 0xFFFF;
 
-	case 6:
-	    psav->XExpansion = 0x00030002;
-	    psav->displayXoffset = 
-		(((PanelSizeX - ((3 * ViewPortWidth)/2)) / 2) + 0x7) & 0xFFF8;
-	    break;
+    psav->YExp1 = YExpansion >> 16;
+    psav->YExp2 = YExpansion & 0xFFFF;
 
-	case 7:
-	    psav->XExpansion = 0x00020001;
-	    psav->displayXoffset = 
-		(((PanelSizeX - (2 * ViewPortWidth)) / 2) + 0x7) & 0xFFF8;
-	    break;
-    }
-	
-    switch( YFactor )
-    {
-	case 0:
-	    psav->YExpansion = 0x00010001;
-	    psav->displayYoffset = (PanelSizeY - ViewPortHeight) / 2;
-	    break;
-	case 1:
-	    psav->YExpansion = 0x00010001;
-	    psav->displayYoffset = (PanelSizeY - ViewPortHeight) / 2;
-	    break;
-	case 2:
-	    psav->YExpansion = 0x00040003;
-	    psav->displayYoffset = (PanelSizeY - ((4 * ViewPortHeight)/3)) / 2;
-	    break;
-	case 4:
-	    psav->YExpansion = 0x00050004;
-	    psav->displayYoffset = (PanelSizeY - ((5 * ViewPortHeight)/4)) / 2;
-	    break;
-	case 5:
-	    psav->YExpansion = 0x00040003;
+    psav->displayXoffset = 
+       ((PanelSizeX - (psav->XExp1 * ViewPortWidth) / psav->XExp2) / 2 + 7) & 0xfff8;
+    psav->displayYoffset = 
+       ((PanelSizeY - (psav->YExp1 * ViewPortHeight) / psav->YExp2) / 2);
 
-	    if((psav->cxScreen == 1024)&&(PanelSizeX ==1400))
-	    {
-		psav->displayYoffset = 
-		    ((PanelSizeY - ((4 * ViewPortHeight)/3)) / 2) - 0x1 ;
-	    }
-	    else
-	    {
-		psav->displayYoffset = (PanelSizeY - ((4 * ViewPortHeight)/3)) / 2;
-	    }
-	    break;
-	case 6:
-	    psav->YExpansion = 0x00050004;
-	    psav->displayYoffset = (PanelSizeY - ((5 * ViewPortHeight)/4)) / 2;
-	    break;
-	case 7:
-	    psav->YExpansion = 0x00030002;
-	    psav->displayYoffset = (PanelSizeY - ((3 * ViewPortHeight)/2)) / 2;
-	    break;
-	case 8:
-	    psav->YExpansion = 0x00020001;
-	    psav->displayYoffset = (PanelSizeY - (2 * ViewPortHeight)) /2;
-	    break;
-	case 9:
-	    psav->YExpansion = 0x00090004;
-	    psav->displayYoffset = (PanelSizeY - ((9 * ViewPortHeight)/4)) /2;
-	    break;
-	case 11:
-	    psav->YExpansion = 0x00110005;
-	    psav->displayYoffset = (PanelSizeY - ((11 * ViewPortHeight)/5)) /2;
-	    break;
-	case 12:
-	    psav->YExpansion = 0x00070003;
-	    psav->displayYoffset = (PanelSizeY - ((7 * ViewPortHeight)/3)) /2;
-	    break;
-	case 14:
-	    psav->YExpansion = 0x00050002;
-	    psav->displayYoffset = (PanelSizeY - ((5 * ViewPortHeight)/2)) /2;
-	    break;
-	case 15:
-	    psav->YExpansion = 0x00040001;
-	    psav->displayYoffset = (PanelSizeY - (4 * ViewPortHeight)) /2;
-	    break;
-    }
-    psav->XExp1 = psav->XExpansion >> 16;
-    psav->XExp2 = psav->XExpansion & 0xFFFF;
-    psav->YExp1 = psav->YExpansion >> 16;
-    psav->YExp2 = psav->YExpansion & 0xFFFF;
 }  /* InitStreamsForExpansionPM */
-
-#endif /* XvExtension */
